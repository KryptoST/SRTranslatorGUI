<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.ServiceProcess.ServiceController</name>
    </assembly>
    <members>
        <member name="P:System.SR.ArgsCantBeNull">
            <summary>Arguments within the 'args' array passed to Start cannot be null.</summary>
        </member>
        <member name="P:System.SR.BadMachineName">
            <summary>MachineName '{0}' is invalid.</summary>
        </member>
        <member name="P:System.SR.CannotStart">
            <summary>Cannot start service '{0}' on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.InvalidEnumArgument">
            <summary>The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.</summary>
        </member>
        <member name="P:System.SR.InvalidParameter">
            <summary>Invalid value '{1}' for parameter '{0}'.</summary>
        </member>
        <member name="P:System.SR.NoService">
            <summary>Service '{0}' was not found on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.OpenSC">
            <summary>Cannot open Service Control Manager on computer '{0}'. This operation might require other privileges.</summary>
        </member>
        <member name="P:System.SR.OpenService">
            <summary>Cannot open '{0}' service on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.PauseService">
            <summary>Cannot pause '{0}' service on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.ResumeService">
            <summary>Cannot resume '{0}' service on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.StopService">
            <summary>Cannot stop '{0}' service on computer '{1}'.</summary>
        </member>
        <member name="P:System.SR.Timeout">
            <summary>The operation requested for service '{0}' has not been completed within the specified time interval.</summary>
        </member>
        <member name="P:System.SR.PlatformNotSupported_ServiceController">
            <summary>ServiceController enables manipulating and accessing Windows services and it is not applicable for other operating systems.</summary>
        </member>
        <member name="P:System.SR.CannotChangeProperties">
            <summary>Cannot change CanStop, CanPauseAndContinue, CanShutdown, CanHandlePowerEvent, or CanHandleSessionChangeEvent property values after the service has been started.</summary>
        </member>
        <member name="P:System.SR.CannotChangeName">
            <summary>Cannot change service name when the service is running.</summary>
        </member>
        <member name="P:System.SR.ServiceName">
            <summary>Service name '{0}' contains invalid characters, is empty, or is too long (max length = {1}).</summary>
        </member>
        <member name="P:System.SR.NoServices">
            <summary>Service has not been supplied. At least one object derived from ServiceBase is required in order to run.</summary>
        </member>
        <member name="P:System.SR.CantStartFromCommandLine">
            <summary>Cannot start service from the command line or a debugger.  A Windows Service must first be installed and then started with the ServerExplorer, Windows Services Administrative tool or the NET START command.</summary>
        </member>
        <member name="P:System.SR.NotInPendingState">
            <summary>UpdatePendingStatus can only be called during the handling of Start, Stop, Pause and Continue commands.</summary>
        </member>
        <member name="P:System.SR.StartSuccessful">
            <summary>Service started successfully.</summary>
        </member>
        <member name="P:System.SR.StopSuccessful">
            <summary>Service stopped successfully.</summary>
        </member>
        <member name="P:System.SR.PauseSuccessful">
            <summary>Service paused successfully.</summary>
        </member>
        <member name="P:System.SR.ContinueSuccessful">
            <summary>Service continued successfully.</summary>
        </member>
        <member name="P:System.SR.CommandSuccessful">
            <summary>Service command was processed successfully.</summary>
        </member>
        <member name="P:System.SR.StartFailed">
            <summary>Service cannot be started. {0}</summary>
        </member>
        <member name="P:System.SR.StopFailed">
            <summary>Failed to stop service. {0}</summary>
        </member>
        <member name="P:System.SR.PauseFailed">
            <summary>Failed to pause service. {0}</summary>
        </member>
        <member name="P:System.SR.ContinueFailed">
            <summary>Failed to continue service. {0}</summary>
        </member>
        <member name="P:System.SR.SessionChangeFailed">
            <summary>Failed to process session change. {0}</summary>
        </member>
        <member name="P:System.SR.CommandFailed">
            <summary>Failed to process service command. {0}</summary>
        </member>
        <member name="P:System.SR.ShutdownOK">
            <summary>Service has been successfully shut down.</summary>
        </member>
        <member name="P:System.SR.ShutdownFailed">
            <summary>Failed to shut down service. The error that occurred was: {0}.</summary>
        </member>
        <member name="P:System.SR.PowerEventOK">
            <summary>PowerEvent handled successfully by the service.</summary>
        </member>
        <member name="P:System.SR.PowerEventFailed">
            <summary>Failed in handling the PowerEvent. The error that occurred was: {0}.</summary>
        </member>
        <member name="P:System.SR.ControlService">
            <summary>Cannot control '{0}' service on computer '{1}'.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Runtime.Versioning.OSPlatformAttribute">
            <summary>
            Base type for all platform-specific API attributes.
            </summary>
        </member>
        <member name="T:System.Runtime.Versioning.TargetPlatformAttribute">
            <summary>
            Records the platform that the project targeted.
            </summary>
        </member>
        <member name="T:System.Runtime.Versioning.SupportedOSPlatformAttribute">
             <summary>
             Records the operating system (and minimum version) that supports an API. Multiple attributes can be
             applied to indicate support on multiple operating systems.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.SupportedOSPlatformAttribute" />
             or use guards to prevent calls to APIs on unsupported operating systems.
            
             A given platform should only be specified once.
             </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.UnsupportedOSPlatformAttribute">
            <summary>
            Marks APIs that were removed in a given operating system version.
            </summary>
            <remarks>
            Primarily used by OS bindings to indicate APIs that are only available in
            earlier versions.
            </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.SupportedOSPlatformGuardAttribute">
             <summary>
             Annotates a custom guard field, property or method with a supported platform name and optional version.
             Multiple attributes can be applied to indicate guard for multiple supported platforms.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.SupportedOSPlatformGuardAttribute" /> to a field, property or method
             and use that field, property or method in a conditional or assert statements in order to safely call platform specific APIs.
            
             The type of the field or property should be boolean, the method return type should be boolean in order to be used as platform guard.
             </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute">
             <summary>
             Annotates the custom guard field, property or method with an unsupported platform name and optional version.
             Multiple attributes can be applied to indicate guard for multiple unsupported platforms.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute" /> to a field, property or method
             and use that  field, property or method in a conditional or assert statements as a guard to safely call APIs unsupported on those platforms.
            
             The type of the field or property should be boolean, the method return type should be boolean in order to be used as platform guard.
             </remarks>
        </member>
    </members>
</doc>
